{% extends "layouts/layout-dashboard.twig" %} {% set page_group = "unit" %} {# Set page properties (page.*) here. #} {% block page %} {# By putting this in a special block, we ensure that it will be set AFTER the default values are set in the parent template, but BEFORE the page itself is rendered. #} {% set page = page | merge({ "title" : "Units", "description" : "" }) %} {{ parent() }} {% endblock %} {% block content %}
<link rel="stylesheet" href="{{site.uri.public}}/css/bootstrap-datepicker.min.css" type="text/css">
<link rel="stylesheet" href="{{site.uri.public}}/css/responsive.dataTables.min.css" type="text/css">
<link rel="stylesheet" href="{{site.uri.public}}/css/dataTables.bootstrap.min.css" type="text/css">
<link rel="stylesheet" href="{{site.uri.public}}/css/datepicker.css" type="text/css">
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/css/datepicker.min.css" />
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/css/datepicker3.min.css" />
<link rel="stylesheet" href="{{site.uri.public}}/css/unitindex.css" type="text/css">
1
<link href="{{site.uri.public}}/css/jquery.paginate.css" rel="stylesheet">


<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="//code.jquery.com/jquery.min.js"></script>
    <script src="{{site.uri.public}}/js/jquery.paginate.js"></script>
<!-- <script src="//code.jquery.com/jquery.min.js"></script> -->

<!-- <script  type="text/javascript" src="{{site.uri.public}}/js/paginathing.js"></script> -->






    <div class="row no-margin">
    <div class="col-xs-12 col-md-12 col-sm-12 no-padding" style="float:right;">
        <div class="panel panel-primary">
            <div id="settings-alerts" class="payment-alert">

            </div>
            <div class="container-fluid">
                <form class="form-inline">
                    <div class="form-group">
                        <h2>Payments</h2>
                    </div>
                </form>
                <div class="panel-body no-padding">
                    <div class='table-header'>
                        <form class="form-inline FiltersForUnitsPaysTable" >
                            <div id='date'  class='header-datePicker'>
                                <div class="form-group">
                                    <label class="control-label" for="totalAptsSelect"> Date: </label>
                                    <div class='input-group date ' id='dateFilter'>
                                        <input type='text' class="form-control " data-date-view-mode="years" />
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class=" control-label " for="totalAptsSelect units-search-field"> Search: </label>
                                <div class='input-group date' >
                                    <input id ="units-search-field" type="text" class="form-control" placeholder="Search " />
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-search"></span>
                                    </span>
                                </div>
                            </div>
                            <div class="form-group" >
                                <label  class="control-label" for="totalAptsSelect"> Neighborhood: </label>
                                <select class="form-control" id="neighborhoodFilter" >
                                    <!-- <option>All</option> -->
                                </select>
                            </div>
                              <div class="form-group" >
                                <div class='users-btn-panel btnDivExportCancel' >
                                    <button onclick="exporttocsv()" class="form-control btn btn-success createYearPayment control-form" type="button"> Export to CSV</button>
                                    <button id="cancelEverythingBtn" type="button" class="form-control btn btn-danger createYearPayment control-form" onclick="cancelEverything()" disabled>Cancel</button>
                                 </div>        
                            </div>
                        </form>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="table-responsive" >
                        <div class="panel-body">
                            <div class="panel-body no-padding"  >
                                <table id='billDiv' class='display nowrap table table-bordered table-hover table-striped tablesorter-bootstrap dataTables' cellspacing='0' style='display:block; table-layout:fixed; border:none;'>
                                    <thead>
                                        <tr>
                                            <th>Unit Code</th>
                                            <th>Owner</th>
                                            <th>Hood</th>
                                            <th>Finance Type</th>
                                            <th>Jan</th>
                                            <th>Feb</th>
                                            <th>March</th>
                                            <th>April</th>
                                            <th>May</th>
                                            <th>June</th>
                                            <th>July</th>
                                            <th>Aug</th>
                                            <th>Sep</th>
                                            <th>Oct</th>
                                            <th>Nov</th>
                                            <th>Dec</th>
                                            <th id="thtext">Due/Paid</th>
                                            <th>Payment</th>
                                            <!-- <th>Due/Paid All Years</th> -->
                                            <th>Save</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- table Modal -->
<div class="modal fade" id="unitTableModal" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Unit Details Info</h4>
            </div>
            <div class="modal-body">
                <div class="panel-body inf-content">
                    <table class="table table-condensed table-user-information">
                        <tbody >
                            <tr>
                                <td class="no-border">
                                    <strong>
                                <span class="glyphicon glyphicon-user  text-primary "></span>    
                                User Name                                                
                            </strong>
                                </td>
                                <td class="text-primary no-border user-name">
                                    user name
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <strong>
                                <span class="glyphicon glyphicon-eye-open text-primary"></span> 
                                Role                                                
                            </strong>
                                </td>
                                <td class="text-primary user-role">
                                    Admin
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <strong>
                                <span class="glyphicon glyphicon-phone text-primary"></span>
                                phone                                                
                            </strong>
                                </td>
                                <td class="text-primary user-phone">
                                    0599965554
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <strong>
                                <span class="glyphicon glyphicon-envelope text-primary"></span> 
                                Email                                                
                            </strong>
                                </td>
                                <td class="text-primary user-email">
                                    noreply@email.com
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <strong>
                    <span class="glyphicon glyphicon-home text-primary"></span> 
                        Units   
                        <br>  
                       
                    </strong>
                    <div class="unit-modal-wrapper">
                        <table class="modal-unit-table table table-condensed">
                            <thead style=" font-family:Bre-Serif; font-size:16px;">
                                <tr>
                                    <th style="text-align: left;">Rawabi Code</th>
                                    <th>Neighborhood</th>
                                    <th>Phone</th>
                                    <th>Tabu Code</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- on save modal content -->
<div class="modal fade" id="paymentConfirm" tabindex="-1" role="dialog" aria-labelledby="edit" aria-hidden="true">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></button>
            <h4 class="modal-title custom_align" id="Heading">Confirm Payment and save</h4>
        </div>
        <div class="modal-body">
            <div class="row">
                <div class='form-group col-md-6'>
                    <div class='input-group display-block'>
                        <label for="amountDue">Amount due</label>
                        <input id='amountDue' type='text' class='form-control ' name='amountDue' readonly='readonly'>
                    </div>
                </div>
                <div class='form-group col-md-6'>
                    <div class='input-group display-block'>
                        <label for="currentPaid">Paid</label>
                        <input id='currentPaid' type='text' class='form-control ' name='currentPaid' readonly='readonly'>
                        <input id='hiddenPaid' type='hidden' class='form-control ' name='hiddenPaid'>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class='form-group col-md-6'>
                    <div class='input-group display-block'>
                        <label for="paid">Total Balance</label>
                        <input id='paid' type='text' class='form-control ' name='paid' readonly='readonly'>
                    </div>
                </div>
                <div class='form-group col-md-6'>
                    <div class='input-group display-block'>
                        <label for="paymentType">Payment Type</label>
                        <select class="form-control paymentType" id="paymentType">
                            <option selected="true">Cash</option>
                            <option>Check</option>
                            <option>Direct deposit</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class='form-group col-md-6'>
                    <div class='input-group display-block'>
                        <label for="paymentDate">Payment Date</label>
                        <input type='text' class="form-control paymentDate" id="paymentDate" />
                    </div>
                </div>
                <div class='form-group col-md-6'>
                    <div class='input-group display-block'>
                        <label id="numberLabel" for="typeNumber">Receipt Number</label>
                        <input type='text' class="form-control typeNumber" id="typeNumber" />
                    </div>
                </div>
            </div>
            <div class='no-padding form-group col-md-12'>
                <textarea class='paymentNote' rows='4' cols='60' placeholder='please write the reason behind updating bill payment amount for each month'></textarea>
            </div>
        </div>
        <div class="modal-footer ">
            <button type="button" class="btn btn-success" id="savePayment">Accept</button>
            <button type="button" class="btn btn-danger" data-dismiss="modal">Decline</button>
        </div>
    </div>
</div>
<!-- delete unit Modal -->
<div class="modal fade" id="delete" tabindex="-1" role="dialog" aria-labelledby="edit" aria-hidden="true">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></button>
            <h4 class="modal-title custom_align" id="Heading">Delete a Unit</h4>
        </div>
        <div class="modal-body">
            <div class="alert">Are you sure you want to delete this Unit?</div>
        </div>
        <div class="modal-footer ">
            <button type="button" class="btn btn-danger" id="deleteunit">Yes</button>
            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
        </div>
    </div>
</div>
<!-- bills unit Modal -->
<div class="modal fade" id="updateUnitBills" tabindex="-1" role="dialog" aria-labelledby="edit" aria-hidden="true">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></button>
            <h4 class="modal-title custom_align" id="Heading"></h4>
        </div>
        <div class="modal-body">
        </div>
        <div class="modal-footer ">
            <button type="button" class="btn btn-success" id="billUnitUpdate">Accept</button>
            <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
        </div>
    </div>
</div>
<!-- bills/payments Modal -->
<div class="modal fade modal-lg" id="updateModal" tabindex="-1" role="dialog" aria-labelledby="edit" aria-hidden="true">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></button>
            <h4 class="modal-title custom_align" id="updateModalHeading">Confirm the following changes for unit with code: and owner: </h4>
        </div>
        <div class="modal-body" id="updateModalBody">
        </div>
        <div class="modal-footer ">
            <button type="button" class="btn btn-success" id="updateModalDB">Accept</button>
            <button type="button" class="btn btn-danger" data-dismiss="modal">Decline</button>
        </div>
    </div>
</div>
{% endblock %} {% block page_scripts %}
<script>






$(document).ready(function() {


    var validToSubmit = false;

    csrf_token = $("meta[name=csrf_token]").attr("content");
    updateArr = {};
    postArr = [];

    $.ajax({
        "url": site['uri']['public'] + '/getUnits/all',
        type: "get",
        dataType: 'json'
    }).done(function(unitsFinance) {
        payments_data = unitsFinance;
    
        fillRepare(payments_data);
        manageUnitBills();
        //open modal on table row double click 
       
        $('.tablesorter tr td').on('dblclick', function() {
            var userId = $(this).closest('tr').data('userid');
    
            //get modal data
            $.ajax({
                "url": site['uri']['public'] + '/getUnitDetails/' + userId,
                type: "get",
                dataType: 'json'
            }).done(function(data) {

                var data = data[0];
                if (data != undefined) {

                    $(".table-user-information .user-name").text(data.display_name);
                    $(".table-user-information .user-role").text('not admin');
                    $(".table-user-information .user-phone").text('0599965554');
                    $(".table-user-information .user-email").text(data.email);

                    //if user has units show unit table inside modal
                    if (data.units.length > 0) {

                        $(".modal-unit-table tbody").text('');

                        for (var i = 0; i < data.units.length; i++) {

                            fillModalUnitTable(data.units[i].rawabicode, data.units[i].neighborhood,
                                data.units[i].phone, data.units[i].topocode, data.units[i].id);

                            if ($(".no-result").length > 0) {
                                $(".no-result").addClass("hide");
                            }

                        }

                    } else {


                    }

                    //delete unit button
                    $('.modal-unit-table button').on('click', function() {
                        $("#delete.modal").modal('show');

                        var unitId = $(this).data('unitid');;
                        //confirm delete unit button
                        $('#delete #deleteunit').on('click', function() {
                            var params = { unit_id: unitId, csrf_token: encodeURIComponent(csrf_token) };
                            var url = site['uri']['public'] + "/deleteunit/?";
                            var req1 = $.ajax({
                                type: "DELETE",
                                url: url,
                                data: params,
                                beforeSend: function() {
                                    $('.loader-modal-lg').modal('show');
                                },
                            }).done(function(data) {
                                $("#delete.modal").modal('hide');
                                //delete row from table in modal
                                $(".modal-unit-table td").closest("tr[data-unitid=" + unitId + "]").remove();
                                //delete it from big unit table
                                $("#billDiv td").closest("tr[data-unitid=" + unitId + "]").remove();

                                //show no result found after deleting the last unit from unit table
                                if ($("#billDiv td").length <= 0) {

                                    $("#billDiv tbody").append('<tr><td class="no-result" colspan="20"> no units found... </td></tr>');
                                }
                                //show no units 
                                if ($(".modal-unit-table td").length <= 0) {
                                    $(".modal-unit-table tbody").append('<tr><td class="no-result" colspan="5"> no units found... </td></tr>');

                                }


                            }).fail(function(err) {

                            });
                        });

                    });
                    //prevent modal to open on click at paid input
                    if (!$(this).find("input").hasClass("updatePaid")) {

                        $('#unitTableModal').modal('show');
                    }


                }
            });

        });



    }).fail(function(err) {

        $("#billDiv tbody").append('<tr><td class="no-result" colspan="20"> no units found... </td> </tr>');
    });


});



function fillRepare(unitsFinance) {
    for (var unit in unitsFinance) {
        fillPage(unitsFinance[unit]);

    }
}

function fillModalUnitTable(rawabiCode, neighborhood, phone, tabuCode, unit_id) {

    $(".modal-unit-table tbody").append(
        "<tr data-unitId=" + unit_id + "><td>" + rawabiCode + "</td>" +
        "<td>" + neighborhood + "</td><td>" + phone + "</td><td>" + tabuCode + "</td>" +
        "<td style='text-align: right;'><button type='button' class='btn btn-primary'  data-unitId=" + unit_id + ">Delete Unit</button></td>" +
        "</tr>");

}

function fillPage(unitData) {
    // for loop to fill the tds from Objects (Params)

    $('#billDiv tbody').append(

        "<tr id='unitRow" + unitData.unit_Id + "' data-valid='false' data-userId='" + unitData.unit_owner + "' data-unitId=" + unitData.unit_Id + ">" +
        "<td class='inputs1 rawabocode' id='rawabi_Code" + unitData.unit_Id + "'></td>" +
        "<td class='inputs1 displayname' id='display_Name" + unitData.unit_Id + "'></td>" +
        "<td class='inputs1  neighborhood' id='neighborhood" + unitData.unit_Id + "'></td>" +
        "<td  class='inputs1 finance-type'>" +
        "<p>Bills:</>" +

        "<div class='sepration-line'></div>" +
        "<p>Payments:</p>" +
        "</td>" +
        "<td class='inputs'>" +
        "<input  id='b_1_" + unitData.unit_Id + "' type='number' onkeyup='updateBill(this)' data-unitid='" + unitData.unit_Id + "' class='bill_1  form-control bill-amount unit-bill" + unitData.unit_Id + "' disabled>" +
        "<input  id='p_1_" + unitData.unit_Id + "' type='number'  class='payment-input form-control unit-payment" + unitData.unit_Id + "'   disabled>" +
        "</td>" +
        "<td class='inputs'>" +
        "<input   id='b_2_" + unitData.unit_Id + "' type='number' onkeyup='updateBill(this)' data-unitid='" + unitData.unit_Id + "' class='bill_2  form-control bill-amount unit-bill" + unitData.unit_Id + "'  disabled>" +
        "<input   id='p_2_" + unitData.unit_Id + "' type='number'  class=' payment-input form-control unit-payment" + unitData.unit_Id + "'  disabled>" +
        "</td>" +
        "<td class='inputs'>" +
        "<input   id='b_3_" + unitData.unit_Id + "' type='number'onkeyup='updateBill(this)' data-unitid='" + unitData.unit_Id + "' class='bill_3 form-control bill-amount unit-bill" + unitData.unit_Id + "'  disabled>" +
        "<input  id='p_3_" + unitData.unit_Id + "' type='number'  class='payment-input form-control unit-payment" + unitData.unit_Id + "'  disabled >" +
        "</td>" +
        "<td class='inputs'>" +
        "<input  id='b_4_" + unitData.unit_Id + "' type='number' onkeyup='updateBill(this)' data-unitid='" + unitData.unit_Id + "' class='bill_4 form-control bill-amount unit-bill" + unitData.unit_Id + "'  disabled>" +
        "<input  id='p_4_" + unitData.unit_Id + "' type='number'  class=' payment-input form-control unit-payment" + unitData.unit_Id + "'  disabled>" +
        "</td>" +
        "<td class='inputs'>" +
        "<input  id='b_5_" + unitData.unit_Id + "' type='number' onkeyup='updateBill(this)' data-unitid='" + unitData.unit_Id + "' class='bill_5 form-control bill-amount unit-bill" + unitData.unit_Id + "'  disabled>" +
        "<input  id='p_5_" + unitData.unit_Id + "' type='number'  class='payment-input form-control unit-payment" + unitData.unit_Id + "'  disabled>" +
        "</td>" +
        "<td class='inputs'>" +
        "<input  id='b_6_" + unitData.unit_Id + "' type='number' onkeyup='updateBill(this)' data-unitid='" + unitData.unit_Id + "' class='bill_6 form-control bill-amount  unit-bill" + unitData.unit_Id + "'  disabled>" +
        "<input  id='p_6_" + unitData.unit_Id + "' type='number'  class='payment-input form-control unit-payment" + unitData.unit_Id + "'  disabled>" +
        "</td>" +
        "<td class='inputs'>" +
        "<input  id='b_7_" + unitData.unit_Id + "' type='number' onkeyup='updateBill(this)' data-unitid='" + unitData.unit_Id + "' class='bill_7 form-control bill-amount unit-bill" + unitData.unit_Id + "'  disabled>" +
        "<input  id='p_7_" + unitData.unit_Id + "' type='number'  class='payment-input form-control unit-payment" + unitData.unit_Id + "'  disabled>" +
        "</td>" +
        "<td class='inputs'>" +
        "<input  id='b_8_" + unitData.unit_Id + "' type='number' onkeyup='updateBill(this)' data-unitid='" + unitData.unit_Id + "' class='bill_8 form-control bill-amount unit-bill" + unitData.unit_Id + "'  disabled>" +
        "<input  id='p_8_" + unitData.unit_Id + "' type='number'  class='payment-input form-control unit-payment" + unitData.unit_Id + "'  disabled>" +
        "</td>" +
        "<td class='inputs'>" +
        "<input  id='b_9_" + unitData.unit_Id + "' type='number' onkeyup='updateBill(this)' data-unitid='" + unitData.unit_Id + "' class='bill_9 form-control bill-amount unit-bill" + unitData.unit_Id + "'  disabled>" +
        "<input   id='p_9_" + unitData.unit_Id + "' type='number'  class='payment-input form-control unit-payment" + unitData.unit_Id + "'   disabled>" +
        "</td>" +
        "<td class='inputs'>" +
        "<input  id='b_10_" + unitData.unit_Id + "' type='number' onkeyup='updateBill(this)' data-unitid='" + unitData.unit_Id + "' class='bill_10 form-control bill-amount unit-bill" + unitData.unit_Id + "'  disabled>" +
        "<input  id='p_10_" + unitData.unit_Id + "' type='number'  class='payment-input form-control unit-payment" + unitData.unit_Id + "'  disabled>" +
        "</td>" +
        "<td class='inputs'>" +
        "<input  id='b_11_" + unitData.unit_Id + "' type='number' onkeyup='updateBill(this)' data-unitid='" + unitData.unit_Id + "' class='bill_11 form-control bill-amount unit-bill" + unitData.unit_Id + "'  disabled>" +
        "<input  id='p_11_" + unitData.unit_Id + "' type='number'  class='payment-input form-control unit-payment" + unitData.unit_Id + "'  disabled>" +
        "</td>" +
        "<td class='inputs'>" +
        "<input  id='b_12_" + unitData.unit_Id + "' type='number' onkeyup='updateBill(this)' data-unitid='" + unitData.unit_Id + "' class='bill_12 form-control bill-amount unit-bill" + unitData.unit_Id + "'  disabled>" +
        "<input  id='p_12_" + unitData.unit_Id + "' type='number'  class='payment-input form-control unit-payment" + unitData.unit_Id + "'  disabled>" +
        "</td>" +


        "<td>" +
        "<div class='row-summary'>" +
        "<div class='form-group '>" +
        "<div class='input-group'>" +
        "<span class='input-group-addon'></span>" +
        "<input style='display:none' id='claculationinput" + unitData.unit_Id + "' type='text' class='form-control claculationinput' name='total' readonly='readonly'>" +
        "<input  id='calaculationinputDue" + unitData.unit_Id + "' type='number' class='form-control' disabled>" +
        "<input  id='calaculationinputPaid" + unitData.unit_Id + "' type='number' class='form-control' disabled>" +
        "</div>" +
        "</div></div>" +
        "</td>" +
        "<td>" +
        "<div class='row-summary'>" +
        "<div class='form-group' >" +
        "<div class='input-group'>" +
        "<span style='width:5%;'  class='input-group-addon'></span>" +
        "<input style='display:none'  id='claculationinput2" + unitData.unit_Id + "' type='text' class='form-control' name='paid' readonly='readonly' style='display:inline;' value='0'>" +
        "<input id='updatePaid_" + unitData.unit_Id + "' type='text' onkeyup='updatePaid(this)' class='form-control updatePaid' name='updatepaid' style='display:inline; '>" +
        "</div>" +
        "</div></div>" +
        "</td>" +
        "<td>" +
        "<div style='padding:0' id='saveButton" + unitData.unit_Id + "' class='input-group form-control save-icon'>" +
        "<span style='color:red' class='input-group-addon' onclick='submitUpdatesFromTable(" + unitData.unit_Id + ")'>" +
        "<span class='fa fa-floppy-o' ></span>" +
        "</span>" +
        "</div>" +
        "</td></div></tr>");

    //fill table data
    $('#rawabi_Code' + unitData.unit_Id).html(unitData.rawabi_code);
    if (unitData.user_name != null) {
        $('#display_Name' + unitData.unit_Id).html(unitData.user_name);

    }
    if (unitData.neighborhood != null) {
        $('#neighborhood' + unitData.unit_Id).html(unitData.neighborhood);
    }
}

var billsMonth = [];

function updateBill(element) {
    $('#cancelEverythingBtn').removeAttr('disabled');

    var billAmount = parseInt($(element).val());
    var currentId = $(element).attr('id');
    var id = currentId.split("_")[2];


    if(isNaN(billAmount) || billAmount < 0) {
        $('#' + currentId).attr('title', 'Bills amount should be a postive number');
        $('#' + currentId).tipsy({ trigger: 'manual', fade: true });
        $('#' + currentId).tipsy("show");
        setTimeout(function() { $('#' + currentId).tipsy("hide"); }, 2000);
        $(element).removeClass('dashed-border');
        $("#updatePaid_" + id).attr("disabled", "true");
        $('#saveButton' + id).removeClass('dashed-border');
        $('#calaculationinputDue' + id).removeClass('dashed-border');
        $('#calaculationinputDueAll' + id).removeClass('dashed-border');
        $('#calaculationinputDue' + id).val($('#calaculationinputDue' + id).data("orginal"));
        $('#calaculationinputDueAll' + id).val($('#calaculationinputDueAll' + id).data("orginal"));
        validToSubmit = false;
        var currentRowBills = $(element).parent().closest('tr').find(".bill-amount");

        $.each(currentRowBills, function(index, input) {
            if ($(input).attr("id") != currentId) {
                $(input).attr("disabled", true);
            }
            else {
                $(input).attr("disabled", false);
            }
        });
        return;
    }

    var currentRowBills = $(element).parent().closest('tr').find(".bill-amount");
    var amountDueSum = 0;
    $.each(currentRowBills, function(index, value) {
        amountDueSum += parseInt($(value).val());
    });

    var index = $(element).parent().index();
    var month = $(element).closest('tbody').prev('thead').find('th').eq(index).text();
    billsMonth.push(month);

    var payment = $(element).attr('id').replace("b", "p");
    var paymentAmount = isNaN(parseInt($('#' + payment).val())) ? 0 : parseInt($('#' + payment).val());

    if (billAmount < paymentAmount) {
        $(element).removeClass('dashed-border');
        $('#' + currentId).attr('title', 'Bills amount should be more than current payment amount');
        $('#' + currentId).tipsy({ trigger: 'manual', fade: true });
        $('#' + currentId).tipsy("show");
        $("#updatePaid_" + id).attr("disabled", "true");
        validToSubmit = false;
        setTimeout(function() { $('#' + currentId).tipsy("hide"); }, 2000);
        $('#saveButton' + id).removeClass('dashed-border');
        $('#calaculationinputDue' + id).removeClass('dashed-border');
        $('#calaculationinputDueAll' + id).removeClass('dashed-border');
        $('#calaculationinputDue' + id).val($('#calaculationinputDue' + id).data("orginal"));
        $('#calaculationinputDueAll' + id).val($('#calaculationinputDueAll' + id).data("orginal"));
        $.each(currentRowBills, function(index, input) {
            if ($(input).attr("id") != currentId) {
                $(input).attr("disabled", true);
            }
            else {
                $(input).attr("disabled", false);
            }
        });
        return;
    } else {
        $.each(currentRowBills, function(index, input) {
            $(input).attr("disabled", false);
        });
        var sumOfBills = 0;
        var enabledBillsInputs = $(".unit-bill" + id);
        $.each(enabledBillsInputs, function(index, input) {
            sumOfBills += parseInt($(input).val());
        });
        $('#calaculationinputDue' + id).val(sumOfBills);
        $('#calaculationinputDueAll' + id).val(parseInt($('#calaculationinputDueAll' + id).data("orginal")) + (sumOfBills - parseInt($('#calaculationinputDue' + id).data("orginal"))));
        $('#saveButton' + id).addClass('dashed-border');
        $('#calaculationinputDue' + id).addClass('dashed-border');
        $('#calaculationinputDueAll' + id).addClass('dashed-border');
        $(element).addClass('dashed-border');
        $('#' + currentId).attr('title', '');
        $('#' + currentId).tipsy("hide");
        $("#updatePaid_" + id).removeAttr("disabled");
        validToSubmit = true;
        if ($("#updatePaid_" + id).val() != "") {
            $('#updatePaid_' + id).keyup();
        }
    }

}

function cancelEverything() {

    manageUnitBills();
    $(".updatePaid").val("");
    $(".updatePaid").removeAttr("disabled");
    $(".dashed-border").removeClass("dashed-border");
    validToSubmit = false;
    $("#cancelEverythingBtn").blur();
    $('#cancelEverythingBtn').prop('disabled', true);
}

function updatePaid(element) {

    $('#cancelEverythingBtn').removeAttr('disabled');
    var paidValue = parseInt($('#' + element.id).val());
    var currentId = $(element).attr('id');
    var res = element.id.split("_");
    var disabledInputs = $(".unit-payment" + res[1]);

    if ($('#' + element.id).val() == "") {
        paidValue = 0;
    }

    var orginalPaidValue = paidValue;

    if (isNaN($('#' + element.id).val()) || paidValue == 0 || parseInt($("#calaculationinputPaid" + res[1]).val()) < 0 ) {
        var changedBillFlag = false;
        var currentRowBills = $(element).parent().closest('tr').find(".bill-amount");
        $.each(currentRowBills, function(index, input) {
            if ($(input).val() != $(input).data("orginal")) {
                changedBillFlag = true;
            }
            if (paidValue != 0) {
                $(input).attr("disabled", true);
            }
        });
        $('#' + currentId).attr('title', 'Not a valid amount');
        $('#' + currentId).tipsy({ trigger: 'manual', fade: true });
        $('#' + currentId).tipsy("show");
        setTimeout(function() { $('#' + currentId).tipsy("hide"); }, 2000);
        $('#calaculationinputPaid' + res[1]).val(parseInt($("#calaculationinputPaid" + res[1]).data("orginal")));
        $('#calaculationinputPaidAll' + res[1]).val(parseInt($("#calaculationinputPaidAll" + res[1]).data("orginal")));
        if (paidValue != 0) {
            $('#saveButton' + res[1]).removeClass('dashed-border');
        }
        else if (paidValue == 0 && changedBillFlag) {
            $('#saveButton' + res[1]).addClass('dashed-border');
        }
        else {
            $('#saveButton' + res[1]).removeClass('dashed-border');
        }
        if (paidValue == 0) {
            $.each(currentRowBills, function(index, input) {
                $(input).attr("disabled", false);
            });
        }
        $('#calaculationinputPaid' + res[1]).removeClass('dashed-border');
        $('#calaculationinputPaidAll' + res[1]).removeClass('dashed-border');
        $.each(disabledInputs, function(index, input) {
            $(input).val($(input).data("orginal"));
            if ($(input).val() == 0) {
                $(input).val("");
            }
            $(input).removeClass("dashed-border");
        });
        return;
    }

    var currentRowBills = $(element).parent().closest('tr').find(".bill-amount");
    $.each(currentRowBills, function(index, input) {
        $(input).attr("disabled", false);
    });

    $('#' + currentId).tipsy("hide");

    $('#saveButton' + res[1]).addClass('dashed-border');
    $('#calaculationinputPaid' + res[1]).addClass('dashed-border');
    $('#calaculationinputPaidAll' + res[1]).addClass('dashed-border');

    $.each(disabledInputs, function(index, input) {
        $(input).val($(input).data("orginal"));
        if ($(input).val() == 0) {
            $(input).val("");
        }
        $(input).removeClass("dashed-border");
    });

    if (paidValue > 0) {
        $.each(disabledInputs, function(index, input) {
            var inputPaid = $(input).data("orginal");
            if (inputPaid == "") {
                inputPaid = 0;
            }
            inputPaid = parseInt(inputPaid);
            var inputBill = $(this).parent().find(".bill-amount").val();
            
            if (inputPaid != inputBill) {
                if (paidValue + inputPaid >= inputBill) {
                    var flag = true;
                    for (var i = 0; i < index; i++) {
                        if ($("#b_" + (i + 1) + "_" + res[1]).val() != $("#p_" + (i + 1) + "_" + res[1]).val()) {
                            flag = false;
                        }
                    }
                    if (flag == false) {
                        return false;
                    }
                    if (index != 11) {
                        $(input).val(inputBill);
                    }
                    else {
                       $(input).val(paidValue + inputPaid); 
                    }
                    paidValue = paidValue + inputPaid - inputBill;
                    $(input).addClass("dashed-border");
                    validToSubmit = true;
                }
                else {
                    if (paidValue == 0) {
                        return false;
                    }
                    var flag = true;
                    for (var i = 0; i < index; i++) {
                        if ($("#b_" + (i + 1) + "_" + res[1]).val() != $("#p_" + (i + 1) + "_" + res[1]).val()) {
                            flag = false;
                        }
                    }
                    if (flag == true) {
                        $(input).val(paidValue + inputPaid);
                        $(input).addClass("dashed-border");
                        validToSubmit = true;
                    }
                }
            }
        });
    }
    else if (paidValue < 0) {
        var foundPayment = true;

        $($(".unit-payment" + res[1]).get().reverse()).each(function(index, input) {
            if (foundPayment == false) {
                return false;
            }
            var inputPaid = $(input).data("orginal");
            if (inputPaid == "") {
                inputPaid = 0;
            }
            inputPaid = parseInt(inputPaid);
            var inputBill = $(this).parent().find(".bill-amount").val();
            if (inputPaid != 0 || inputPaid != "") {
                foundPayment = false;
                if (paidValue + inputPaid < 0) {
                    $(input).val(0);
                    paidValue = paidValue + inputPaid;
                    for (var i = (12 - index) - 1; i >= 0; i--) {
                        if (parseInt($("#p_" + (i + 1) + "_" + res[1]).val()) + paidValue <= 0) {
                            paidValue = paidValue + parseInt($("#p_" + (i + 1) + "_" + res[1]).val());
                            $("#p_" + (i + 1) + "_" + res[1]).val(0);
                            $("#p_" + (i + 1) + "_" + res[1]).addClass("dashed-border");
                            if (paidValue == 0) {
                                break;
                            }
                        }
                        else {
                            paidValue = paidValue + parseInt($("#p_" + (i + 1) + "_" + res[1]).val());
                            $("#p_" + (i + 1) + "_" + res[1]).val(parseInt(paidValue));
                            $("#p_" + (i + 1) + "_" + res[1]).addClass("dashed-border");
                            if (paidValue >= 0) {
                                break;
                            }
                        }
                    }
                }
                else {
                    $(input).val(paidValue + inputPaid);
                }
                $(input).addClass("dashed-border");
                validToSubmit = true;
            }
        });
    }
{#     else {
        return;
    } #}
    
    $('#calaculationinputPaid' + res[1]).val(parseInt($("#calaculationinputPaid" + res[1]).data("orginal")) + parseInt(orginalPaidValue));

    $('#calaculationinputPaidAll' + res[1]).val(parseInt($("#calaculationinputPaidAll" + res[1]).data("orginal")) + parseInt(orginalPaidValue));

    if (parseInt($("#calaculationinputPaid" + res[1]).val()) < 0) {
        var changedBillFlag = false;
        var currentRowBills = $(element).parent().closest('tr').find(".bill-amount");
        $.each(currentRowBills, function(index, input) {
            if ($(input).val() != $(input).data("orginal")) {
                changedBillFlag = true;
            }
            if (paidValue != 0) {
                $(input).attr("disabled", true);
            }
        });
        $('#' + currentId).attr('title', 'Not a valid amount');
        $('#' + currentId).tipsy({ trigger: 'manual', fade: true });
        $('#' + currentId).tipsy("show");
        setTimeout(function() { $('#' + currentId).tipsy("hide"); }, 2000);
        $('#calaculationinputPaid' + res[1]).val(parseInt($("#calaculationinputPaid" + res[1]).data("orginal")));
        $('#calaculationinputPaidAll' + res[1]).val(parseInt($("#calaculationinputPaidAll" + res[1]).data("orginal")));
        if (paidValue != 0) {
            $('#saveButton' + res[1]).removeClass('dashed-border');
        }
        else if (paidValue == 0 && changedBillFlag) {
            $('#saveButton' + res[1]).addClass('dashed-border');
        }
        else {
            $('#saveButton' + res[1]).removeClass('dashed-border');
        }
        if (paidValue == 0) {
            $.each(currentRowBills, function(index, input) {
                $(input).attr("disabled", false);
            });
        }
        $('#calaculationinputPaid' + res[1]).removeClass('dashed-border');
        $('#calaculationinputPaidAll' + res[1]).removeClass('dashed-border');
        $.each(disabledInputs, function(index, input) {
            $(input).val($(input).data("orginal"));
            if ($(input).val() == 0) {
                $(input).val("");
            }
            $(input).removeClass("dashed-border");
        });
        return;
    }

}



function submitUpdatesFromTable(unitId) {
    //dont show modal if there is no change 

    isValid = $("#saveButton" + unitId).hasClass("dashed-border");

    if (!isValid) {
        return false;
    }

    $("#updateModalHeading").html("Confirm the following changes for unit with code <strong>" + $("#rawabi_Code" + unitId).text() + "</strong> and owner <strong>" + $("#display_Name" + unitId).text() + "</strong>");

    var currentRowBills = $("#billDiv tbody tr [data-unitid='" + unitId + "'].bill-amount");
    var currentRowPayment = $("#billDiv tbody tr input.unit-payment" + unitId);


    var bills = [];
    var billsObj = {};

    var payment = [];
    var paymentObj = {};

    var changedData = [];

    var paymentAttr = {};
    var billsAttr = {};

    var billChangesHTML = "";

    var paymentChangesHTML = "";

    var monthNames = moment.monthsShort();

    var billFlag = false;

    var today = new Date();
    var dd = today.getDate();
    var mm = today.getMonth()+1;

    var yyyy = today.getFullYear();
    if(dd<10){
        dd='0'+dd;
    } 
    if(mm<10){
        mm='0'+mm;
    } 
    var today = dd+'-'+mm+'-'+yyyy;

    //if there is at least one changed bill , add it to bill object to be send to DB
    if ($(currentRowBills).hasClass("dashed-border")) {

        billFlag = true;
        
        billChangesHTML += `<h3>Bill Changes</h3><br>`;

        $.each(currentRowBills, function(index, value) {

            bills.push($(value).val());
            billsObj = { "unitId": unitId, "bills": bills };

            if ($(value).hasClass("dashed-border")) {
                var monthName = monthNames[index];
                billChangesHTML += `
                    <div class="row billsChanged" style="margin-bottom:10px;">
                        <input value="`+ index +`" type='hidden' class='form-control ' name='monthNumValue' readonly='readonly' disabled>
                        <div class='form-group col-md-3'>
                            <div class='input-group display-block'>
                                <label for="month">Month</label>
                                <input value="`+ monthName +`" type='text' class='form-control ' name='month' readonly='readonly' disabled>
                            </div>
                        </div>
                        <div class='form-group col-md-3'>
                            <div class='input-group display-block'>
                                <label for="oldAmount">Old Amount</label>
                                <input value="`+ $(value).data("orginal") +`" type='text' class='form-control ' name='oldAmount' readonly='readonly' disabled>
                            </div>
                        </div>
                        <div class='form-group col-md-3'>
                            <div class='input-group display-block'>
                                <label for="newAmount">New Amount</label>
                                <input value="`+ $(value).val() +`" type='text' class='form-control ' name='newAmount' readonly='readonly' disabled>
                            </div>
                        </div>
                        <div class='form-group col-md-3'>
                            <div class='input-group display-block'>
                                <label for="note">Note</label>
                                <textarea placeholder="Bill amount change reason" rows="2" type='text' class='form-control ' name='note'></textarea>
                            </div>
                        </div>
                    </div>`;
                changedData.push({
                    "bill": {
                        "unitId": unitId,
                        "data": {
                            "index": index,
                            "bill": $(value).val()

                        }
                    }

                });
            }

        });
    }

    //if there is at least one changed payment , add it to payment object to be send to DB
    if ($(currentRowPayment).hasClass("dashed-border")) {
        paymentChangesHTML += `<h3>Payment Changes</h3><br>`;
        paymentChangesHTML += `
            <div class="row" style="margin-bottom:10px;">
                <div class='form-group col-md-6'>
                    <div class='input-group display-block'>
                        <label for="currPayment">Current Payment</label>
                        <input value="`+ $("#updatePaid_" + unitId).val() +`" type='text' class='form-control dashed-border' name='currPayment' id='currPayment' readonly='readonly' disabled>
                    </div>
                </div>
                <div class='form-group col-md-6'>
                    <div class='input-group display-block'>
                        <label for="paymentDateField">Payment Date</label>
                        <input value="`+ today +`" type='text' class="form-control" name="paymentDateField" id="paymentDateField" />
                    </div>
                </div>
            </div>
            <div class="row" style="margin-bottom:10px;">
                <div class='form-group col-md-6'>
                    <div class='input-group display-block'>
                        <label for="amountDue">Amount Due (This Year)</label>
                        <input value="`+ $("#calaculationinputDue" + unitId).val() +`" type='text' class='form-control ' name='amountDue' readonly='readonly' disabled>
                    </div>
                </div>
                <div class='form-group col-md-6'>
                    <div class='input-group display-block'>
                        <label for="amountPaid">Amount Paid (This Year)</label>
                        <input value="`+ $("#calaculationinputPaid" + unitId).val() +`" type='text' class='form-control ' name='amountPaid' readonly='readonly' disabled>
                    </div>
                </div>
            </div>
            <div class="row" style="margin-bottom:10px;">
                <div class='form-group col-md-6'>
                    <div class='input-group display-block'>
                        <label for="amountDueAll">Amount Due (All Years)</label>
                        <input value="`+ $("#calaculationinputDueAll" + unitId).val() +`" type='text' class='form-control ' name='amountDueAll' readonly='readonly' disabled>
                    </div>
                </div>
                <div class='form-group col-md-6'>
                    <div class='input-group display-block'>
                        <label for="amountPaidAll">Amount Paid (All Years)</label>
                        <input value="`+ $("#calaculationinputPaidAll" + unitId).val() +`" type='text' class='form-control ' name='amountPaidAll' readonly='readonly' disabled>
                    </div>
                </div>
            </div>
            <div class="row" style="margin-bottom:10px;">
                <div class='form-group col-md-6'>
                    <div class='input-group display-block'>
                        <label for="paymentTypeField">Payment Type</label>
                        <select class="form-control paymentType" id="paymentTypeField">
                            <option selected="true">Cash</option>
                            <option>Check</option>
                            <option>Direct deposit</option>
                        </select>
                    </div>
                </div>
                <div class='form-group col-md-6'>
                    <div class='input-group display-block'>
                        <label id="numberTypeLabel" for="numberType">Receipt Number</label>
                        <input type='text' class="form-control" id="numberType" />
                    </div>
                </div>
            </div>
            <div class="row" style="margin-bottom:10px;">
                <div class='form-group col-md-12'>
                    <div class='input-group display-block'>
                        <label for="paymentNote">Note</label>
                        <textarea type='text' class='form-control ' name='paymentNote' id='paymentNote' placeholder="Bill amount change reason"></textarea>
                    </div>
                </div>
            </div>`;
        if (billFlag) {
            paymentChangesHTML += "<hr>";
        }
        $.each(currentRowPayment, function(index, value) {

            payment.push($(value).val() == "" ? 0 : $(value).val());
            paymentObj = { "unitId": unitId, "payment": payment };

            if ($(value).hasClass("dashed-border")) {
                changedData.push({
                    "payment": {
                        "unitId": unitId,
                        "data": {
                            "index": index,
                            "payment": $(value).val()
                        }
                    }


                });
            }

        });
    }

    $("#updateModalBody").html(paymentChangesHTML + billChangesHTML);

    $("#updateModal").on('shown', function() {
        $("#paymentDateField").datetimepicker({
            showTodayButton: true,
            allowInputToggle: true,
            useCurrent: true,
            focusOnShow: true,
            icons: {
                today: 'glyphicon glyphicon-calendar'
            },
            format: 'DD-MM-YYYY'
        });

        $("#paymentTypeField").on('change', function() {
            if (this.value == "Cash") {
                $("#numberTypeLabel").text('Receipt Number');
            } else if (this.value == "Check") {
                $("#numberTypeLabel").text('Check Number');
            } else {
                $("#numberTypeLabel").text('Deposit Number');
            }
        });

        var tableDate = {};
        $("#updateModalDB").unbind().on("click", function() {
            if (paymentChangesHTML != "") {
                paymentAttr =  {
                    "currPayment": $("#currPayment").val(),
                    "paymentDate": $("#paymentDateField").val(),
                    "paymentType": $("#paymentTypeField").val(),
                    "paymentNumber": $("#numberType").val(),
                    "paymentNote": $("#paymentNote").val()
                };
            }
            if (billChangesHTML != "") {
                $.each($("#updateModal #updateModalBody .billsChanged"), function(index, value) {
                    var currBill = $(value);
                    var monthNumValue = currBill.find("input[name=monthNumValue]").first().val();
                    var month = currBill.find("input[name=month]").first().val();
                    var oldAmount = currBill.find("input[name=oldAmount]").first().val();
                    var newAmount = currBill.find("input[name=newAmount]").first().val();
                    var note = currBill.find("textarea[name=note]").first().val();
                    var billObj = {
                        "month" : month,
                        "oldAmount" : oldAmount,
                        "newAmount" : newAmount,
                        "note" : note
                    };
                    billsAttr[monthNumValue] = billObj;
                });
            }
            tableData = {
                "payment": paymentObj,
                "bills": billChangesHTML == "" ? -1 : billsObj,
                "changedData": changedData,
                "paymentAttr": paymentAttr,
                "billsAttr": billsAttr,
                "year": getCalenderDate(),
                csrf_token: encodeURIComponent(csrf_token)
            };
            sendToDB(tableData, $("#updateModal"));
        });
    });

    $("#updateModal").modal("show");
}

// initialize datetime filter 
$('#dateFilter').datetimepicker({
    //debug: true,
    minDate: new Date(2017, 0, 1),
    defaultDate: new Date(),
    dayViewHeaderFormat: 'YYYY',
    format: 'YYYY',
    viewMode: 'years',
    allowInputToggle: true
});

//submit table data to DB 

function sendToDB(tableData, modal) {
    //add payment to DB
    var url = site['uri']['public'] + "/getUnits/updateFinance/";
    var req1 = $.ajax({
        type: "POST",
        url: url,
        data: tableData,
    }).done(function(data) {
        cancelEverything();
        modal.modal('hide');
        notifyMe();
        //remove dashed boreder
        $(".payment-input").removeClass('dashed-border');
        $('.bill-amount').removeClass("dashed-border");
        $("#currentPaid").removeClass("dashed-border");

    }).fail(function(err, err1, err2) {
        alert("problem " + err + err1 + err2);
        cancelEverything();
        modal.modal('hide');
        $("#settings-alerts").html("<div class='alert alert-danger'>Data Has not been Saved</div>");
    });
}

// to return year only 
function getCalenderDate() {
    var date = $('#dateFilter').data("DateTimePicker").date().toDate(),
        year = date.getFullYear(),
        d = new Date(year),
        day = d.getDate();

    var current = new Date();
    var current_year = current.getFullYear();
        if(year == current_year){
             $('#thtext').html("Due/Paid "+year);
        }
    return year;
}

function manageUnitBills() {
    var date = new Date(),
        month = date.getMonth(),
        year = getCalenderDate();
    var unitBills = [];
    var billsInfo = [];
    var unitId = '';
    $.each($("#billDiv tbody tr"), function() {
        unitId += $(this).data('unitid') + "-";

    });

    unitId = unitId.slice(0, -1);
    $.ajax({
        "url": site['uri']['public'] + '/manageUnitBills/' + unitId + "/" + year,
        type: "get",
        dataType: 'json'
    }).done(function(data) {
        for (unitId in data) {
      
            if (!isNaN(parseInt(unitId))){
            var sumDue = 0;
            var sumPaid = 0;
            for (var i = 0; i < data[unitId].length; i++) {
                sumDue += parseInt(data[unitId][i]);

                $("#b_" + (i + 1) + "_" + unitId).val(data[unitId][i]);
                $("#b_" + (i + 1) + "_" + unitId).data("orginal", data[unitId][i]);
                $("#b_" + (i + 1) + "_" + unitId).removeAttr("disabled")

            }

            $("#calaculationinputDue" + unitId).val(sumDue);
            $("#calaculationinputDue" + unitId).data("orginal", sumDue);
                            

            if (data['payment_' + unitId] != undefined) {
                for (var i = 0; i < data['payment_' + unitId].length; i++) {

                    //sum += parseInt(data[unitId][i]);
                    var paymentValue = data['payment_' + unitId][i];
                    $("#p_" + (i + 1) + "_" + unitId).val(paymentValue == 0 ? "" : paymentValue);
                    $("#p_" + (i + 1) + "_" + unitId).data("orginal", paymentValue);
                    sumPaid += parseInt(paymentValue);

                    //$("#claculationinput" + unitId).val(sum);
                }
            }
            else {
                for (var i = 0; i < 12; i++) {
                    $("#p_" + (i + 1) + "_" + unitId).val("");
                    $("#p_" + (i + 1) + "_" + unitId).data("orginal", "");
                } 
            }
            $("#calaculationinputPaid" + unitId).val(sumPaid);
            $("#calaculationinputPaid" + unitId).data("orginal", sumPaid);
            //alert("Unit: " + unitId + " Sum Due this year: " + sumDue + " \n Sum Paid this year: " + sumPaid);

        }
        }
        getAllYearsBillsAndPayments();

    });
}

function getAllYearsBillsAndPayments() {
    var date = new Date(),
        month = date.getMonth(),
        year = getCalenderDate();
    var unitId = '';
    $.each($("#billDiv tbody tr"), function() {
        unitId += $(this).data('unitid') + "-";

    });

    unitId = unitId.slice(0, -1);
    $.ajax({
        "url": site['uri']['public'] + '/manageUnitBillsAll/' + unitId + "/" + year,
        type: "get",
        dataType: 'json'
    }).done(function(data) {
        for (unitId in data) {
            if (!isNaN(parseInt(unitId))){

            var billAll = data[unitId];
            var paymentAll = 0;
            if (data['payment_' + unitId] != undefined) {
                paymentAll = data['payment_' + unitId];
            }
            $("#calaculationinputDueAll" + unitId).val(billAll);
            $("#calaculationinputPaidAll" + unitId).val(paymentAll);
            $("#calaculationinputDueAll" + unitId).data("orginal", billAll);
            $("#calaculationinputPaidAll" + unitId).data("orginal", paymentAll);
                        

            //alert("Unit: " + unitId + " Sum Due all years: " + billAll + " \n Sum Paid all years: " + paymentAll);
        }
        }
    });
}
$('#dateFilter').on('change dp.change', function() {
    $('#billDiv tbody').html("");

var year =getCalenderDate();
    
        $('#thtext').html("Due/Paid "+year);
    fillRepare(payments_data);
    manageUnitBills();

});

//Dawnload csv

jQuery.fn.tableToCSV = function() {
    
    var clean_text = function(text){
        text = text.replace(/"/g, '""');
        return '"'+text+'"';
    };
    
    $(this).each(function(){
            var table = $(this);
            var caption = $(this).find('caption').text();
            var title = [];
            var rows = [];


            $(this).find('tr').each(function(){
                var data = [];
                $(this).find('th').each(function(){
                    var text = clean_text($(this).text());
                    title.push(text);
                    });
  
               $(this).find('td').each(function(){
                 var text = [];
                 $(this).find("input").each(function() {
                     text.push(this.value);
                    });

                 var t="";
            // if array is empty it means that there is no input text
                if (typeof text !== 'undefined' && text.length > 0)
                {
                     jQuery.each( text, function( i, val ) {
                      t += val + "/";
                    });
                     // to remove last "/" char
                     t = t.replace(/\/$/,'');
                }
                else
                {
                    t = clean_text($(this).text());
                    // to remove ":" char from middle of string
                    t = t.replace(/\:/,'/');
                }
               data.push(t);
                
          });
 
         data = data.join(",");
         rows.push(data);

  });
            title = title.join(",");
            rows = rows.join("\n");

            csv = title + rows;
           
            var uri = 'data:text/csv;charset=utf-8,%EF%BB%BF' + encodeURIComponent(csv);
            var download_link = document.createElement('a');
            download_link.href = uri;
            var ts = new Date().getTime();
            if(caption==""){
                download_link.download = ts+".csv";
            } else {
                download_link.download = caption+"-"+ts+".csv";
            }
            document.body.appendChild(download_link);
            download_link.click();
            document.body.removeChild(download_link);
    });
    
};

function exporttocsv() {
    $("#billDiv").tableToCSV ({
        filename: 'Payments'
    });
}

//search in the table
$('#units-search-field').on('input', function(e) {
    var search = $('#units-search-field').val().toLowerCase();
    $('#billDiv').each(function() { // Search among possibly multiple tables
        // Hide all table rows
        $(this).find('tbody tr').hide();
        // Search through all td:s and if a match is found => display the tr that the td belongs to
        $(this).find('tbody td').filter(function() {
            return $(this).text().toLowerCase().indexOf(search) != -1; // case insensitive search
        }).parent().show();
        $(this).trigger('applyWidgets'); // for zebra
    });
});

//--------------------------

 var csrf_token = $("meta[name=csrf_token]").attr("content");
        var params={neighborhood:'Anfield',csrf_token:encodeURIComponent(csrf_token)};
        var url = site['uri']['public'] + "/get-neighborhoods/";
        var req1= $.ajax({  
              type: "GET",  
              url: url,
              data: params ,

            }).done(function(data){
                data=JSON.parse(data);
                var items;
                    for(var propertyName in data) {
                     items+="<option>"+propertyName+"</option>";         
                    }
                    $('#neighborhoodFilter').html(items);
                })
           .fail(function(err){
             console.log("err",err)
           });
           

    $("#neighborhoodFilter").change(function (self) {
        var neighborhood = $('#neighborhoodFilter').val();
        $('#billDiv tbody').html('');
        
        var req1= $.ajax({  
              type: "GET",  
              dataType: 'json',
              "url": site['uri']['public'] + '/GetDataUsingNei/' + neighborhood + "/",
            }).done(function(data){
                payments_data = data;
                fillRepare(payments_data);
                 manageUnitBills();
                
                })
           .fail(function(err){
             console.log("err",err)
           });

    });
    
function notifyMe() {
  if (!("Notification" in window)) {
    alert("This browser does not support desktop notification");
  }
  else if (Notification.permission === "granted") {
        var options = {
                body: "New Data Has been Saved",
                icon: "{{site.uri.public}}/images/Rawabi_Logo.png"
                             };
          var notification = new Notification("Notification",options);
  }
  else if (Notification.permission !== 'denied') {
    Notification.requestPermission(function (permission) {
      if (!('permission' in Notification)) {
        Notification.permission = permission;
      }
    
      if (permission === "granted") {
        var options = {
              body: "New Data Has been Saved",
              icon: "{{site.uri.public}}/images/rawabi_Logo.png"
          };
        var notification = new Notification("Notification",options);
      }
    });
  }
}

</script>
   
    <script src="https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.1/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.1/js/buttons.flash.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.32/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.32/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.1/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.1/js/buttons.print.min.js"></script>
{% endblock %}