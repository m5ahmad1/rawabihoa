{% extends "layouts/layout-dashboard.twig" %} {% set page_group = "units" %} {# Set page properties (page.*) here. #} {% block page %} {# By putting this in a special block, we ensure that it will be set AFTER the default values are set in the parent template, but BEFORE the page itself is rendered. #} {% set page = page | merge({ "title" : "Year Payment", "description" : "" }) %} {{ parent() }} #} {% endblock %} {% block content %}
<link rel="stylesheet" href="{{site.uri.public}}/css/bootstrap-datepicker.min.css" type="text/css">
<link rel="stylesheet" href="{{site.uri.public}}/css/responsive.dataTables.min.css" type="text/css">
<link rel="stylesheet" href="{{site.uri.public}}/css/dataTables.bootstrap.min.css" type="text/css">
<link rel="stylesheet" href="{{site.uri.public}}/css/datepicker.css" type="text/css">
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/css/datepicker.min.css" />
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/css/datepicker3.min.css" />
<style>
@media only screen and (max-width: 768px),
(min-width: 768px) and (max-width: 1024px) {
    .tablesorter td:nth-of-type(1):before {
        content: "Year";
    }
    .tablesorter td:nth-of-type(2):before {
        content: "Fixed monthly bill";
    }
}
</style>
<div class="row">
    <div class="col-xs-12">
        <div class="panel panel-primary">
            <div id="settings-alerts" class="create-unit-alert">
            </div>
            <div class="panel-heading ">
                <div class='pull-right users-btn-panel' style="padding-top:20px">
                    <button type="button" data-toggle="modal" id="createButton" class="btn btn-success"><i class="fa fa-plus-square"></i> Add New Fixed Bill</button>
                </div>
            </div>
            <div class="container-fluid">
                <h2>Year Payments</h2>
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="panel-body no-padding" style="min-height: 170px;">
                            <div class="table-responsive">
                                <table id="yearpayment" class="tablesorter table table-bordered table-hover table-striped tablesorter-bootstrap dataTables cellspacing=0 ">
                                    <thead>
                                        <th>Year</th>
                                        <th>Fixed monthly bill</th>
                                        <th>Actions</th>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    {#
    <div class="col-xs-1 col-md-1 col-md-offset-1"></div>
    #}
</div>
<div class="modal fade" style="overflow: visible;" id="createFixedBill" role="dialog" aria-labelledby="edit" aria-hidden="true" style="font-family:'Bree Serif'">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></button>
            <h4 class="modal-title custom_align" id="Heading">Create New Fixed Bill</h4>
        </div>
        <div class="modal-body">
            <div class="row">
                <div class="col-xs-1"></div>
                <div class="col-xs-10">
                    <form class="form-horizontal" role="form">
                        <div class="form-group">
                            <label for="DateOfBill">Year</label>
                            <div class='input-group date datepicker datepicker2'>
                                <input type='' class="form-control DateOfBill" id="DateOfBill" name="DateOfBill" required/>
                                <span class="input-group-addon">
                     <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="billAmount">Fixed Bill</label>
                                <input class="form-control billAmount"  id="billAmount" type="number" min="0" onkeypress="return (event.charCode == 8 || event.charCode == 0) ? null : event.charCode >= 48 && event.charCode <= 57" required="" />
                            <div class="name-alerts" style="color:red"></div>
                        </div>
                    </form>
                    <div class="col-xs-1"></div>
                </div>
            </div>
            <div class="modal-footer ">
                <button type="button" id="CreateBill" class="btn btn-primary">Create</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
            </div>
        </div>
        {#
        <div class="col-xs-1 col-md-1 col-md-offset-1"></div>
        #}
    </div>
</div>
<div class="modal fade" id="deleteFixedBill" tabindex="-1" role="dialog" aria-labelledby="edit" aria-hidden="true">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></button>
            <h4 class="modal-title custom_align" id="Heading">Delete</h4>
        </div>
        <div class="modal-body">
            <div class="alert">Are you sure you want to delete this Bill?</div>
        </div>
        <div class="modal-footer ">
            <button type="button" class="btn btn-danger" id="deleteFixedBillInModal">Yes</button>
            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
        </div>
    </div>
</div>
 
{% endblock %} {% block page_scripts %} {% include 'components/common/js-snippets/user-table-columns.twig' %}
<script type="text/javascript">
$(document).ready(function() {
  csrf_token = $("meta[name=csrf_token]").attr("content");

        var current = new Date();
        var now = current.getFullYear();
        current.setFullYear(now);
        current.setMonth(12);
        current.setDate(31);
        $('.datepicker2').datetimepicker({
            locale: 'en',
            debug: true,
            dayViewHeaderFormat: 'YYYY',
            format: 'YYYY',
            viewMode: 'years',
            minDate: current,
            allowInputToggle: true
        });


    var table = $('#yearpayment').DataTable({
        'ajax': {
            "type": "Get",
            "contentType": "application/json; charset=utf-8",
            "dataType": "json",
            "url": site['uri']['public'] + '/getUnits/getFixedBill/all/',
            "dataSrc": function(json) {
                return json;
            }
        },


        "processing": true,
        "autoWidth": false,
        "paging": true,
        "ordering": true,
        "info": false,
        "searching": true,
        "responsive": true,
        "pageLength": 10,
       
        columns: [{
                "data": "year"},
                 { "data": "billAmount"},
                 { "data": 'Actios',
                 "defaultContent": '<div  class="DeleteFixedBill"><button type="button" id ="DeleteFixedBill" data-toggle="tooltip" title="Delete Fixed Bill" class="btn btn-primary"><i class="fa fa-trash" aria-hidden="true"></button></div>'
                 }       
                ],
        fnRowCallback: function(row, data, iDisplayIndex, iDisplayIndexFull) {
            $(row).data('id', data.id);
            $(row).data('year', data.year);
        }
  });//end of DataTable Init


    $('#yearpayment')
        .on('init.dt', function() {
            var date_now = new Date();
            var current_year = date_now.getFullYear();
            table.column(0).nodes().each(function (cell, i) {
            if(table.cell(i, 0).data() <=current_year){
            var rowId = $('#yearpayment').dataTable()
            .fnFindCellRowIndexes(table.cell(i, 0).data(), 0);
             table.cell(rowId, 2).data('');
         } 
        });
    });


//Create Fixed Bill Button
 $('#createButton').on('click', function() {
        $('#createFixedBill').modal("show");
        var target = $('.form-horizontal');
        target.closest('form').find("input[type=text],input[type=number]").val("");
        $('.form-horizontal').find('input').each(function() {
            $(this).css("border-color", "#909090");
        });
        $(".name-alerts-en").html("");
        $(".name-alerts-ar").html("");
        $(".number-alerts-1").html("");
        $(".number-alerts-2").html("")

    });
    
    $('#createFixedBill').on('click', '#CreateBill', function() {
        var modal = $(this).closest('.modal');
        var values = getValuesFromForm('.form-horizontal');
        var params = { year: values.DateOfBill, bill: values.billAmount, extraFees: "", interestAmount: "", csrf_token: encodeURIComponent(csrf_token) };
        var url = site['uri']['public'] + "/getUnits/updateFixedBill/";
        $.ajax({
                "url": url,
                type: "POST",
                data: params,
            }).done(function(data) {
                $('#createFixedBill').modal("hide");
                $('.loader-modal-lg').modal('hide');
                $('#yearpayment').DataTable().ajax.reload(function() {
                    var date_now = new Date();
                    var current_year = date_now.getFullYear();
                    table.column(0).nodes().each(function (cell, i) {
                    if(table.cell(i, 0).data() <=current_year){
                    var rowId = $('#yearpayment').dataTable()
                        .fnFindCellRowIndexes(table.cell(i, 0).data(), 0);
                         table.cell(rowId, 2).data('');
                      } 
                    });
                });
            }) .fail(function(err) {
                $('.loader-modal-lg').modal('hide')
                $('#create').modal("hide");
                 console.log("err", err);
            });
       });

 
    
    $('#yearpayment').on('click', '#DeleteFixedBill', function() {
    $("#deleteFixedBill.modal").modal('show');
    var id = $(this).closest('tr').data('id');
    var year = $(this).closest('tr').data('year');

    $('#deleteFixedBill').on('click', '#deleteFixedBillInModal', function() {
     
        var params = { id: id,year:year, csrf_token: encodeURIComponent(csrf_token) };
      
          var url = site['uri']['public'] + "/getUnits/deleteFixedBill/";
          $.ajax({
                "url": url,
                type: "DELETE",
                data: params,
            }).done(function(data) {
                $('#deleteFixedBill').modal("hide");
                $('.loader-modal-lg').modal('hide')
                $('#yearpayment').DataTable().ajax.reload(function() {
                    var date_now = new Date();
                    var current_year = date_now.getFullYear();
                    table.column(0).nodes().each(function (cell, i) {
                    if(table.cell(i, 0).data() <=current_year){
                    var rowId = $('#yearpayment').dataTable()
                        .fnFindCellRowIndexes(table.cell(i, 0).data(), 0);
                         table.cell(rowId, 2).data('');
                      } 
                    });
                });


            }).fail(function(err) {
                $('.loader-modal-lg').modal('hide')
                console.log("err", err);
            });
    });
});

        


    function getCalenderDate() {
        var date = $('#dateFilter').data("DateTimePicker").date().toDate(),
            year = date.getFullYear(),
            d = new Date(year),
            day = d.getDate();
        return year;
    }


    function getValuesFromForm(formSelector) {
        // get all the inputs into an array.
        var inputs = $(formSelector + ' :input');
        var values = {};
        inputs.each(function() {
            values[$(this).attr('id')] = $(this).val();
        });
        return values
    }
    jQuery.fn.dataTableExt.oApi.fnFindCellRowIndexes = function(oSettings, sSearch, iColumn) {
        var
            i, iLen, j, jLen, val,
            aOut = [],
            aData,
            columns = oSettings.aoColumns;

        for (i = 0, iLen = oSettings.aoData.length; i < iLen; i++) {
            aData = oSettings.aoData[i]._aData;

            if (iColumn === undefined) {
                for (j = 0, jLen = columns.length; j < jLen; j++) {
                    val = this.fnGetData(i, j);

                    if (val == sSearch) {
                        aOut.push(i);
                    }
                }
            } else if (this.fnGetData(i, iColumn) == sSearch) {
                aOut.push(i);
            }
        }

        return aOut;
    }


});

</script>
{% endblock %}